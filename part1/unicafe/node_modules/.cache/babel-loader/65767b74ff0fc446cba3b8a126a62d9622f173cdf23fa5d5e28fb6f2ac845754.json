{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\documents\\\\full-stack-open\\\\part1\\\\unicafe\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistic = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.text, \" \", props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistic;\nconst Statistics = props => {\n  const total = props.good + props.neutral + props.bad;\n  const average = (props.good - props.bad) / total;\n  const positive = props.good / total * 100;\n  if (total !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"good\",\n        value: props.good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"neutral\",\n        value: props.neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"good\",\n        value: props.good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"all\",\n        value: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"average\",\n        value: average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"positive\",\n        value: positive + \" %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this);\n  }\n};\n_c2 = Statistics;\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 39\n  }, this);\n};\n_c3 = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const Text = _ref2 => {\n    let {\n      text\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }, this);\n  };\n  const handleGoodClick = () => setGood(good + 1);\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n  const handleBadClick = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        text: \"give feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGoodClick,\n        text: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleNeutralClick,\n        text: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleBadClick,\n        text: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        text: \"statics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 13\n}, this));\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Statistic\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","createRoot","Statistic","props","text","value","Statistics","total","good","neutral","bad","average","positive","Button","onClick","App","setGood","setNeutral","setBad","Text","handleGoodClick","handleNeutralClick","handleBadClick","root","document","getElementById","render"],"sources":["C:/Users/usuario/documents/full-stack-open/part1/unicafe/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nconst Statistic = (props) => {\n  return (\n    <p>\n      {props.text} {props.value}\n    </p>\n  );\n};\nconst Statistics = (props) => {\n  const total = props.good + props.neutral + props.bad;\n\n  const average = (props.good - props.bad) / total;\n\n  const positive = (props.good / total) * 100;\n if(total !==0){ \n  return (\n    <div>\n      <Statistic text=\"good\" value={props.good} />\n      <Statistic text=\"neutral\" value={props.neutral} />\n      <Statistic text=\"good\" value={props.good} />\n      <Statistic text=\"all\" value={total} />\n      <Statistic text=\"average\" value={average} />\n      <Statistics text=\"positive\" value={positive + \" %\"} />\n    </div>\n  );\n}\nelse{ return( <p>No feedback given</p>)}\n\n};\n\nconst Button = ({ onClick, text }) => <button onClick={onClick}>{text}</button>;\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const Text = ({ text }) => <h1>{text}</h1>;\n\n  const handleGoodClick = () => setGood(good + 1);\n\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n\n  const handleBadClick = () => setBad(bad + 1);\n\n\n\n  return (\n    <div>\n      <div>\n        <Text text=\"give feedback\" />\n      </div>\n      <div>\n        <Button onClick={handleGoodClick} text=\"good\" />\n        <Button onClick={handleNeutralClick} text=\"neutral\" />\n        <Button onClick={handleBadClick} text=\"bad\" />\n      </div>\n      <div>\n        <Text text=\"statics\" />\n      </div>\n    </div>\n  );\n};\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}